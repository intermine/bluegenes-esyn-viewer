var bluegenesEsynViewer=function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s="./src/index.js")}({"./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */function(module,exports){eval("// add any imports if needed, or write your script directly in this file.\n// const SomePackage = require('PackageName');\n\n// make sure to export main, with the signature\nfunction main(el, service, imEntity, state, config) {\n\tif (!state) state = {};\n\tif (!el || !service || !imEntity || !state || !config) {\n\t\tthrow new Error('Call main with correct signature');\n\t}\n\t// sample code here to convert the provided intermine object (e.g. perhaps\n\t// an id) into an identifier the tool expects. e.g.:\n\t// of course if your tool was built for intermine it might understand\n\t// intermine ids already, but many others tools expect a gene symbol or\n\t// protein accession, etc...\n\t/**\n   * Example - you can delete this and replace with your own code *******\n\n    // protVista expects an accession, so convert intermine id to accession\n\n    var entity = imEntity.Protein;\n\n    var columnToConvert = config.columnMapping[entity.class][entity.format];\n    var accession = new imjs.Service(service)\n        .findById(entity.class, entity.value)\n        .then(function(response) {\n        //put some code here to initialise your tool.\n    });\n\n  */\n\tlet graphType = 'Graph';\n\tconst iframeSrc =\n\t\t'http://www.esyn.org/app.php?embedded=true&publishedid=249&type=';\n\tconst rootDiv = document.createElement('div');\n\trootDiv.className = 'rootContainer';\n\n\tconst iframe = document.createElement('iframe');\n\tiframe.id = 'frame';\n\tiframe.className = 'seamless';\n\tiframe.scrolling = 'no';\n\tiframe.style.width = '100%';\n\tiframe.style.height = '97%';\n\tiframe.src = iframeSrc + graphType;\n\trootDiv.appendChild(iframe);\n\n\tconst button = document.createElement('button');\n\tbutton.innerHTML = 'Change Graph Type';\n\n\trootDiv.appendChild(button);\n\n\tbutton.addEventListener('click', function() {\n\t\tgraphType = graphType == 'Graph' ? 'PetriNet' : 'Graph';\n\t\tdocument.getElementById('frame').src = iframeSrc + graphType;\n\t});\n\n\tdocument.getElementById('yourDiv').appendChild(rootDiv);\n}\n\nmodule.exports = { main };\n\n\n//# sourceURL=webpack://bluegenesEsynViewer/./src/index.js?")}});